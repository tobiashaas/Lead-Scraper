name: OpenAPI Schema Validation

'on':
  pull_request:
    branches: [main, develop]
    paths:
      - 'app/api/**'
      - 'app/main.py'
      - 'app/core/config.py'
      - 'app/api/schemas.py'
      - 'app/api/auth_schemas.py'
  push:
    branches: [main, develop]
    paths:
      - 'app/api/**'
      - 'app/main.py'
      - 'app/core/config.py'
      - 'app/api/schemas.py'
      - 'app/api/auth_schemas.py'

jobs:
  validate-openapi:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pydantic pydantic-settings openapi-spec-validator
          
      - name: Start API in background
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          echo $! > api.pid
          
      - name: Wait for API to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "API is ready"
              exit 0
            fi
            echo "Waiting for API... ($i/30)"
            sleep 2
          done
          echo "API failed to start"
          exit 1
          
      - name: Download OpenAPI schema
        run: |
          curl -f http://localhost:8000/openapi.json > openapi.json
          echo "OpenAPI schema downloaded"
          
      - name: Validate OpenAPI schema
        run: |
          openapi-spec-validator openapi.json
          echo "✅ OpenAPI schema is valid"
          
      - name: Upload OpenAPI schema as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-schema
          path: openapi.json
          retention-days: 30
          
      - name: Stop API
        if: always()
        run: |
          if [ -f api.pid ]; then
            kill $(cat api.pid) || true
          fi
          
      - name: Comment on PR with validation result
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const schema = JSON.parse(fs.readFileSync('openapi.json', 'utf8'));
            
            const comment = `## ✅ OpenAPI Schema Validation Passed
            
            **API Version**: ${schema.info.version}
            **OpenAPI Version**: ${schema.openapi}
            **Endpoints**: ${Object.keys(schema.paths).length}
            **Schemas**: ${Object.keys(schema.components?.schemas || {}).length}
            
            The OpenAPI schema has been validated and is available as a workflow artifact.
            
            [View Swagger UI](http://localhost:8000/docs) | [Download Schema](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
