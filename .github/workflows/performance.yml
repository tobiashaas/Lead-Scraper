name: Performance Tests

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 3 * * 1'
  pull_request:
    branches: [ main, develop ]

jobs:
  load-test:
    name: Run load testing suite
    runs-on: ubuntu-latest

    env:
      PYTHONUNBUFFERED: '1'
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/kr_leads_perf
      REDIS_URL: redis://localhost:6379/0
      LOAD_TEST_BASE_URL: http://localhost:8000
      LOAD_TEST_USER_EMAIL: loadtest@example.com
      LOAD_TEST_USER_PASSWORD: loadtest-password
      LOCUST_CSV_PREFIX: data/load_tests/ci_run

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kr_leads_perf
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt-dev python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Locust extras
        run: |
          pip install locust==2.20.0 locust-plugins==4.4.2

      - name: Prepare application
        run: |
          alembic upgrade head
          python scripts/init_db.py

      - name: Start API server
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
          echo $! > api.pid
          sleep 10

      - name: Seed load testing data
        run: |
          python - <<'PY'
          from scripts.load_testing.ensure_ci_seed import seed
          seed()
          PY

      - name: Run Locust mixed workload
        run: |
          mkdir -p data/load_tests
          locust -f tests/load/locustfile.py \
            --headless \
            --users 150 \
            --spawn-rate 15 \
            --run-time 10m \
            --host ${LOAD_TEST_BASE_URL} \
            --csv ${LOCUST_CSV_PREFIX} \
            --html ${LOCUST_CSV_PREFIX}_report.html \
            --logfile ${LOCUST_CSV_PREFIX}.log \
            --exit-code-on-error 1

      - name: Stop API server
        if: always()
        run: |
          if [ -f api.pid ]; then
            kill $(cat api.pid) || true
          fi

      - name: Analyze results
        run: |
          python scripts/load_testing/analyze_results.py \
            --stats-csv ${LOCUST_CSV_PREFIX}_stats.csv \
            --output both \
            --report data/load_tests/analysis_report.md

      - name: Upload load test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: load-testing-results
          path: |
            data/load_tests/*.csv
            data/load_tests/*.html
            data/load_tests/*.log
            data/load_tests/analysis_report.md

      - name: Post summary
        if: always()
        run: |
          echo "## Load Testing Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f data/load_tests/analysis_report.md ]; then
            tail -n +1 data/load_tests/analysis_report.md >> $GITHUB_STEP_SUMMARY
          else
            echo "No analysis report generated." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' && always() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: data/load_tests/analysis_report.md
