# Database Configuration
DATABASE_URL=postgresql://kr_user:kr_password_change_in_production@localhost:5432/kr_leads
DB_ECHO=False  # Set to True for SQL query logging

# PostgreSQL Credentials (for docker-compose)
POSTGRES_DB=kr_leads
POSTGRES_USER=kr_user
POSTGRES_PASSWORD=your_secure_password_here_change_me

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_DB=0

# Tor Configuration
TOR_ENABLED=True
TOR_PROXY=socks5://127.0.0.1:9050
TOR_CONTROL_PORT=9051
TOR_CONTROL_PASSWORD=your_tor_password_here

# Scraping Configuration
SCRAPING_DELAY_MIN=3  # Minimum delay between requests (seconds)
SCRAPING_DELAY_MAX=8  # Maximum delay between requests (seconds)
MAX_RETRIES=3
REQUEST_TIMEOUT=30

# Rate Limiting
RATE_LIMIT_REQUESTS=10  # Max requests per time window
RATE_LIMIT_WINDOW=60    # Time window in seconds

# Playwright Configuration
PLAYWRIGHT_HEADLESS=True
PLAYWRIGHT_BROWSER=firefox  # chromium, firefox, or webkit

# Google Places API
# Get your API key: https://console.cloud.google.com/apis/credentials
# Enable Places API: https://console.cloud.google.com/apis/library/places-backend.googleapis.com
GOOGLE_PLACES_API_KEY=your_google_places_api_key_here

# CAPTCHA Service (optional - nur bei Bedarf)
# TWOCAPTCHA_API_KEY=your_api_key_here
# CAPTCHA_ENABLED=False

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=True  # Set to False in production

# CORS Configuration
# Comma-separated list of allowed origins
# Development: http://localhost:3000,http://localhost:8080
# Production: https://your-domain.com,https://app.your-domain.com
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=True
CORS_MAX_AGE=600  # Preflight cache duration in seconds

# Security & JWT
SECRET_KEY=your-secret-key-change-in-production-min-32-chars-please-use-strong-random-key
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Logging
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE=logs/scraper.log
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Ollama Configuration
OLLAMA_HOST=http://localhost:11434
OLLAMA_MODEL=llama3.2  # llama3.2, mistral, qwen2.5, etc.
OLLAMA_TIMEOUT=120  # Timeout in seconds

# Crawl4AI Configuration
CRAWL4AI_ENABLED=True
CRAWL4AI_WORD_COUNT_THRESHOLD=10
CRAWL4AI_MAX_RETRIES=3

# SmartWe Integration (sp√§ter)
# SMARTWE_API_URL=https://api.smartwe.de
# SMARTWE_API_KEY=your_api_key_here

# Development
DEBUG=True
ENVIRONMENT=development  # development, staging, production
