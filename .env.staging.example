# Staging Environment Configuration Template
# Copy to .env.staging and replace placeholder values
# Staging uses relaxed security and verbose logging for testing

# -----------------------------------------------------------------------------
# Environment & Debug
# -----------------------------------------------------------------------------
ENVIRONMENT=staging
DEBUG=True  # Enabled in staging for detailed error messages
APP_NAME=KR Lead Scraper API (Staging)
APP_VERSION=staging

# -----------------------------------------------------------------------------
# Secrets Management
# Staging can use .env files (SECRETS_MANAGER=none) for simplicity
# -----------------------------------------------------------------------------
SECRETS_MANAGER=none
SECRETS_PROVIDER_URL=
SECRETS_CACHE_TTL=300

# -----------------------------------------------------------------------------
# Crawl4AI Configuration
# -----------------------------------------------------------------------------
CRAWL4AI_ENABLED=True
CRAWL4AI_WORD_COUNT_THRESHOLD=10
CRAWL4AI_MAX_RETRIES=3

# -----------------------------------------------------------------------------
# Smart Scraper Configuration (Testing)
# -----------------------------------------------------------------------------
SMART_SCRAPER_ENABLED=True  # Test smart scraper in staging
SMART_SCRAPER_MODE=enrichment  # Test enrichment mode
SMART_SCRAPER_MAX_SITES=5  # Lower limit for faster testing
SMART_SCRAPER_PREFERRED_METHOD=crawl4ai_ollama
SMART_SCRAPER_USE_AI=True
SMART_SCRAPER_TIMEOUT=30
# Staging: Test smart scraper with lower limits for faster feedback

# -----------------------------------------------------------------------------
# Deduplicator Configuration (Testing)
# Relaxed thresholds for testing duplicate detection
# -----------------------------------------------------------------------------
DEDUPLICATOR_ENABLED=True
DEDUPLICATOR_REALTIME_ENABLED=True
DEDUPLICATOR_AUTO_MERGE_THRESHOLD=0.92  # Lower threshold for testing (92%)
DEDUPLICATOR_CANDIDATE_THRESHOLD=0.75  # Lower threshold to catch more candidates (75%)
DEDUPLICATOR_NAME_THRESHOLD=80  # Relaxed for testing
DEDUPLICATOR_ADDRESS_THRESHOLD=75
DEDUPLICATOR_PHONE_THRESHOLD=85
DEDUPLICATOR_WEBSITE_THRESHOLD=90
DEDUPLICATOR_SCAN_SCHEDULE=0 4 * * *  # 4 AM daily scan
DEDUPLICATOR_SCAN_BATCH_SIZE=50  # Smaller batches for testing
DEDUPLICATOR_CANDIDATE_RETENTION_DAYS=30  # Shorter retention for testing
DEDUPLICATOR_CLEANUP_DELETE_CONFIRMED=True  # Test cleanup of confirmed candidates

# -----------------------------------------------------------------------------
# Security & JWT
# Use a different key than production
# -----------------------------------------------------------------------------
SECRET_KEY=CHANGE_ME_STAGING_SECRET_KEY
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_MINUTES=4320
JWT_ALGORITHM=HS256

# -----------------------------------------------------------------------------
# Database
# -----------------------------------------------------------------------------
POSTGRES_DB=kr_leads_staging
POSTGRES_USER=kr_user_staging
POSTGRES_PASSWORD=CHANGE_ME_STAGING_DB_PASSWORD
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Database Connection Pooling (Staging)
DB_POOL_SIZE=12  # Moderate pool for staging (12 base + 24 overflow = 36 max)
DB_MAX_OVERFLOW=24
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=1800  # Recycle after 30 minutes for quicker feedback
DB_CONNECT_TIMEOUT=10
DB_POOL_PRE_PING=True

# -----------------------------------------------------------------------------
# Redis
# -----------------------------------------------------------------------------
REDIS_PASSWORD=CHANGE_ME_STAGING_REDIS_PASSWORD
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# -----------------------------------------------------------------------------
# Alerting & Notifications (staging)
# Staging typically mirrors production integrations with test channels/credentials
# -----------------------------------------------------------------------------
ALERTING_ENABLED=True

# Email alerts (use staging mailbox or sandbox provider credentials)
ALERT_EMAIL_ENABLED=True
ALERT_EMAIL_TO=alerts-staging@example.com
ALERT_SMTP_HOST=smtp.sendgrid.net  # Gmail: smtp.gmail.com | SES: email-smtp.<region>.amazonaws.com
ALERT_SMTP_PORT=587
ALERT_SMTP_USER=apikey
ALERT_SMTP_PASSWORD=CHANGE_ME_STAGING_SMTP_PASSWORD
ALERT_SMTP_USE_TLS=True
ALERT_FROM_EMAIL=alerts-staging@lead-scraper.example

# Slack alerts (create dedicated staging channel/webhook)
ALERT_SLACK_ENABLED=True
ALERT_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/TEST/TEST/TEST
ALERT_SLACK_CHANNEL=#kr-alerts-staging
ALERT_SLACK_USERNAME=KR Lead Scraper (Staging)

# Alertmanager endpoint (optional for staging monitoring stack)
ALERTMANAGER_URL=http://alertmanager:9093

# Database Backup Configuration (Staging - Testing)
# Cron format: minute hour day-of-month month day-of-week
BACKUP_ENABLED=True  # Test backups in staging
BACKUP_DAILY_SCHEDULE="0 */6 * * *"  # Every 6 hours
BACKUP_WEEKLY_SCHEDULE="0 4 * * 0"  # 4 AM Sunday
BACKUP_MONTHLY_SCHEDULE="0 5 1 * *"  # 5 AM 1st of month
BACKUP_RETENTION_DAILY=3  # Shorter retention in staging
BACKUP_RETENTION_WEEKLY=2
BACKUP_RETENTION_MONTHLY=3
BACKUP_COMPRESSION_ENABLED=True
BACKUP_ENCRYPTION_ENABLED=False  # Optional in staging
BACKUP_ENCRYPTION_KEY=
BACKUP_CLOUD_SYNC_ENABLED=False  # Optional in staging
BACKUP_CLOUD_PROVIDER=s3
BACKUP_CLOUD_BUCKET=kr-scraper-backups-staging
BACKUP_VERIFICATION_ENABLED=True  # Test verification in staging

# -----------------------------------------------------------------------------
# CORS
# Staging allows localhost for development testing
# -----------------------------------------------------------------------------
CORS_ORIGINS=https://staging.your-domain.com,http://localhost:3000,http://localhost:8080

# -----------------------------------------------------------------------------
# Logging
# Verbose logging in staging for debugging
# -----------------------------------------------------------------------------
LOG_LEVEL=DEBUG
LOG_FILE=/var/log/kr-scraper/staging.log
STRUCTURED_LOGGING=True

# -----------------------------------------------------------------------------
# Sentry
# 100% sampling in staging for comprehensive error tracking
# -----------------------------------------------------------------------------
SENTRY_DSN=
SENTRY_ENVIRONMENT=staging
SENTRY_TRACES_SAMPLE_RATE=1.0
SENTRY_PROFILES_SAMPLE_RATE=1.0

# -----------------------------------------------------------------------------
# Rate Limiting
# Relaxed rate limits for testing
# -----------------------------------------------------------------------------
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=60

# -----------------------------------------------------------------------------
# External APIs
# Use test API keys if available, otherwise production keys with caution
# -----------------------------------------------------------------------------
EXTERNAL_API_KEY=CHANGE_ME_STAGING_EXTERNAL_KEY

# -----------------------------------------------------------------------------
# Checklist (remove when complete)
# -----------------------------------------------------------------------------
# [ ] Changed all CHANGE_ME values
# [ ] Set different passwords than production
# [ ] Configured CORS_ORIGINS with staging domain
# [ ] Set DEBUG=True for detailed errors
# [ ] Configured Sentry with staging environment
# [ ] Verified database is separate from production
